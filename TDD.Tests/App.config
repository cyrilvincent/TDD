<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  </configSections>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework" />
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
    <interceptors>
      <interceptor type="System.Data.Entity.Infrastructure.Interception.DatabaseLogger, EntityFramework">
        <parameters>
          <parameter value="ef.log" />
        </parameters>
      </interceptor>
    </interceptors>
  </entityFramework>
  <connectionStrings>
    <add name="TDDDbContext" providerName="System.Data.SqlClient" connectionString="Data Source=.\sqlexpress;Initial Catalog=CodeFirst;Integrated Security=True;" />
  </connectionStrings>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="EntityFramework" publicKeyToken="b77a5c561934e089" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <unity>
    <containers>
      <container>
        <instance type="TDD.Repositories.Library.TDDDbContext, TDD.Repositories.Library" typeConverter="TDD.Tests.MockDbContextConverter, TDD.Tests"/>
        <types>
          <type type="TDD.Repositories.Library.BookRepository, TDD.Repositories.Library" mapTo="TDD.Repositories.Library.BookRepository, TDD.Repositories.Library">
            <property name="DbContext"/>
          </type>
          <type type="TDD.Repositories.Library.PublisherRepository, TDD.Repositories.Library" mapTo="TDD.Repositories.Library.PublisherRepository, TDD.Repositories.Library">
            <property name="DbContext"/>
          </type>
          <type type="TDD.Repositories.Library.AuthorRepository, TDD.Repositories.Library" mapTo="TDD.Repositories.Library.AuthorRepository, TDD.Repositories.Library">
            <property name="DbContext"/>
          </type>
          <type type="TDD.Services.Library.IUseCaseService, TDD.Services.Library" mapTo="TDD.Services.Library.UseCaseService, TDD.Services.Library">
            <property name="BookRepository"/>
            <property name="PublisherRepository"/>
            <property name="AuthorRepository"/>
          </type>
        </types>
      </container>
    </containers>
    <typeAliases>
      <!-- The latest release of Unity introduces the Unity bootstrapper for ASP.NET MVC which has a new built-in lifetime manager: PerRequestLifetimeManager -->
      <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
      <typeAlias alias="perThread" type="Microsoft.Practices.Unity.PerThreadLifetimeManager, Microsoft.Practices.Unity" />
      <typeAlias alias="external" type="Microsoft.Practices.Unity.ExternallyControlledLifetimeManager, Microsoft.Practices.Unity" />
    </typeAliases>
  </unity>
</configuration>